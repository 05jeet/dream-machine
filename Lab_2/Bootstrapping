import matplotlib
import pandas as pd
import seaborn as sns
import numpy as np
# Load the data
df = pd.read_csv('https://raw.githubusercontent.com/albanda/CE888/master/lab2%20-%20bootstrap/customers.csv')
data = df.values.T[1]
# Checking the notes from the lecture, create here your own bootstrap function:
# 1. Sample from the input array x to create an array of samples of shape (n_bootstraps, sample_size)
# Hint: Check the function random.choice() on Numpy
# 2. Calculate and save the mean of the array (this is "data_mean" that is returned by the function)
# 3. Calculate the mean from each bootstrap (i.e., row) and store it.
# (This should be an array of n_bootstraps values)
# 4. Calculate the lower and upper bounds for a 95% CI (hint: check the percentile function on Numpy)
# 5. Return data_mean, and the lower and upper bounds of your interval
def bootstrap_mean(x, sample_size, n_bootstraps):
	# <---INSERT YOUR CODE HERE--->
  data_mean = []
  for i in range(n_bootstraps):
    arr = np.random.choice(x, sample_size)
    data_mean.append(arr.mean())
  lower = np.percentile(data_mean, 2.5, interpolation='lower')
  upper = np.percentile(data_mean, 97.5, interpolation='higher')
  data_mean = np.mean(data_mean)
  # print(data_mean, lower, upper)
  return data_mean, lower, upper
